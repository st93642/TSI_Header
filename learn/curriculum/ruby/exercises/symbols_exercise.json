{
  "id": "symbols_exercise",
  "title": "Symbols in Ruby",
  "description": "Practice using symbols as hash keys and identifiers. Learn when to use symbols vs strings.",
  "difficulty": "beginner",
  "starterCode": "# Symbols Exercise\n\n# 1. Create a method create_user(name, email, age) that returns a hash with symbol keys\n#    Example: create_user('Alice', 'alice@test.com', 25)\n#    => {name: 'Alice', email: 'alice@test.com', age: 25}\n#    Hint: Return {name: name, email: email, age: age}\n\ndef create_user(name, email, age)\n  # Return hash with :name, :email, :age keys\n\nend\n\n# 2. Create a method get_value(hash, key_string) that converts string to symbol and gets value\n#    Example: get_value({name: 'Bob', age: 30}, 'name') => 'Bob'\n#    Example: get_value({name: 'Bob', age: 30}, 'age') => 30\n#    Hint: Use key_string.to_sym to convert string to symbol\n\ndef get_value(hash, key_string)\n  # Convert key_string to symbol and get value from hash\n\nend\n\n# 3. Create a method symbol_to_string(symbol) that converts symbol to string\n#    Example: symbol_to_string(:hello) => \"hello\"\n#    Example: symbol_to_string(:ruby) => \"ruby\"\n#    Hint: Use symbol.to_s\n\ndef symbol_to_string(symbol)\n  # Convert symbol to string\n\nend\n\n# 4. Create a method status_message(status) that returns message based on symbol\n#    :pending => \"Waiting for approval\"\n#    :approved => \"Request approved\"\n#    :rejected => \"Request rejected\"\n#    Hint: Use case/when with symbols\n\ndef status_message(status)\n  # Return message based on status symbol\n\nend\n",
  "tests": [
    {
      "name": "create_user returns hash",
      "call": "create_user('Alice', 'alice@test.com', 25).class.to_s",
      "expected": "Hash"
    },
    {
      "name": "create_user has name key",
      "call": "create_user('Alice', 'alice@test.com', 25)[:name]",
      "expected": "Alice"
    },
    {
      "name": "create_user has email key",
      "call": "create_user('Bob', 'bob@test.com', 30)[:email]",
      "expected": "bob@test.com"
    },
    {
      "name": "create_user has age key",
      "call": "create_user('Alice', 'alice@test.com', 25)[:age]",
      "expected": 25
    },
    {
      "name": "get_value with name",
      "call": "get_value({name: 'Bob', age: 30}, 'name')",
      "expected": "Bob"
    },
    {
      "name": "get_value with age",
      "call": "get_value({name: 'Bob', age: 30}, 'age')",
      "expected": 30
    },
    {
      "name": "symbol_to_string converts",
      "call": "symbol_to_string(:hello)",
      "expected": "hello"
    },
    {
      "name": "symbol_to_string with ruby",
      "call": "symbol_to_string(:ruby)",
      "expected": "ruby"
    },
    {
      "name": "status_message pending",
      "call": "status_message(:pending)",
      "expected": "Waiting for approval"
    },
    {
      "name": "status_message approved",
      "call": "status_message(:approved)",
      "expected": "Request approved"
    },
    {
      "name": "status_message rejected",
      "call": "status_message(:rejected)",
      "expected": "Request rejected"
    }
  ],
  "hints": [
    "Symbol syntax: :symbol_name",
    "Hash with symbol keys: {name: 'value', age: 25}",
    "Convert string to symbol: string.to_sym",
    "Convert symbol to string: symbol.to_s",
    "Access hash with symbol: hash[:key]",
    "Use case/when for status_message"
  ],
  "tags": ["symbols", "hashes", "beginner"]
}
