{
  "exerciseId": "input_output_exercise",
  "variants": [
    {
      "id": "input_output_c",
      "language": "c",
      "code": "#include <stdio.h>\n\nint main(void) {\n    int first = 0;\n    int second = 0;\n\n    if (scanf(\"%d\", &first) != 1) {\n        return 1;\n    }\n    if (scanf(\"%d\", &second) != 1) {\n        return 1;\n    }\n\n    int sum = first + second;\n    int difference = first - second;\n    int product = first * second;\n\n    printf(\"Sum: %d\\n\", sum);\n    printf(\"Difference: %d\\n\", difference);\n    printf(\"Product: %d\\n\", product);\n    return 0;\n}\n",
      "explanation": "The program reads two integers with scanf, computes the required arithmetic results, and prints each with the requested label. Early returns guard against invalid input.",
      "keyPoints": [
        "scanf returns the number of successfully read inputs",
        "Storing intermediate results keeps the code clear",
        "printf prints each label and value on separate lines",
        "Returning 0 signals success when everything executes correctly"
      ]
    },
    {
      "id": "input_output_cpp",
      "language": "cpp",
      "code": "#include <iostream>\n\nint main() {\n    int first = 0;\n    int second = 0;\n\n    std::cin >> first >> second;\n\n    int sum = first + second;\n    int difference = first - second;\n    int product = first * second;\n\n    std::cout << \"Sum: \" << sum << std::endl;\n    std::cout << \"Difference: \" << difference << std::endl;\n    std::cout << \"Product: \" << product << std::endl;\n    return 0;\n}\n",
      "explanation": "std::cin reads two integers from standard input, and each calculated value is printed with std::cout. The labels match the required output exactly.",
      "keyPoints": [
        "std::cin >> value reads formatted data from stdin",
        "Compute all arithmetic once before printing",
        "std::cout with std::endl ensures each result appears on its own line",
        "Returning 0 indicates successful program completion"
      ]
    }
  ]
}
