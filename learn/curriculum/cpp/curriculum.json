{
  "language": "C++",
  "version": "2.0.0",
  "description": "Chapter-by-chapter walkthrough of Beginning C++17 with aligned lessons and offline-ready exercises.",
  "estimatedHours": 70,
  "chapters": [
    {
      "id": "chapter_01",
      "title": "Chapter 1: Basic Ideas",
      "description": "Introduces the structure of a C++ program, the compilation pipeline, the Standard Library, and modern coding conventions.",
      "lessons": [
        {
          "id": "chapter_01_basic_ideas",
          "title": "Chapter 1: Basic Ideas",
          "duration": 45,
          "difficulty": "beginner",
          "exerciseAvailable": true,
          "exerciseVariants": [
            { "id": "chapter_01_basic_ideas_c", "language": "c", "title": "Exercise 1A: Hello TSI in C" },
            { "id": "chapter_01_basic_ideas_cpp", "language": "cpp", "title": "Exercise 1B: Hello TSI in Modern C++" }
          ]
        }
      ]
    },
    {
      "id": "chapter_02",
      "title": "Chapter 2: Introducing Fundamental Types of Data",
      "description": "Explores built-in data types, literals, initialization strategies, and how to measure numeric ranges using the Standard Library.",
      "lessons": [
        {
          "id": "chapter_02_fundamental_types",
          "title": "Chapter 2: Introducing Fundamental Types of Data",
          "duration": 50,
          "difficulty": "beginner",
          "exerciseAvailable": true
        }
      ]
    },
    {
      "id": "chapter_03",
      "title": "Chapter 3: Working with Fundamental Data Types",
      "description": "Practises arithmetic, bitwise manipulation, operator precedence, and formatting results for clear diagnostics.",
      "lessons": [
        {
          "id": "chapter_03_working_with_data",
          "title": "Chapter 3: Working with Fundamental Data Types",
          "duration": 55,
          "difficulty": "intermediate",
          "exerciseAvailable": true
        }
      ]
    },
    {
      "id": "chapter_04",
      "title": "Chapter 4: Making Decisions",
      "description": "Focuses on relational operators, selection statements, and constructing robust branch logic with guard clauses.",
      "lessons": [
        {
          "id": "chapter_04_making_decisions",
          "title": "Chapter 4: Making Decisions",
          "duration": 50,
          "difficulty": "intermediate",
          "exerciseAvailable": true
        }
      ]
    },
    {
      "id": "chapter_05",
      "title": "Chapter 5: Arrays and Loops",
      "description": "Shows how to build counted, conditional, and range-based loops while organising data in one- and multi-dimensional arrays.",
      "lessons": [
        {
          "id": "chapter_05_arrays_and_loops",
          "title": "Chapter 5: Arrays and Loops",
          "duration": 60,
          "difficulty": "intermediate",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_06",
      "title": "Chapter 6: Pointers and References",
      "description": "Covers pointer fundamentals, reference semantics, pointer arithmetic, and safe dynamic allocation patterns.",
      "lessons": [
        {
          "id": "chapter_06_pointers_and_references",
          "title": "Chapter 6: Pointers and References",
          "duration": 60,
          "difficulty": "intermediate",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_07",
      "title": "Chapter 7: Working with Strings",
      "description": "Compares C-style strings with std::string, demonstrates conversions, and highlights formatting and validation techniques.",
      "lessons": [
        {
          "id": "chapter_07_strings",
          "title": "Chapter 7: Working with Strings",
          "duration": 55,
          "difficulty": "intermediate",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_08",
      "title": "Chapter 8: Defining Functions",
      "description": "Details function declarations, parameter passing options, default arguments, overloading, and recursion guidance.",
      "lessons": [
        {
          "id": "chapter_08_defining_functions",
          "title": "Chapter 8: Defining Functions",
          "duration": 60,
          "difficulty": "intermediate",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_09",
      "title": "Chapter 9: Function Templates",
      "description": "Introduces generic programming, template parameters, and how to let the compiler generate type-safe algorithms.",
      "lessons": [
        {
          "id": "chapter_09_function_templates",
          "title": "Chapter 9: Function Templates",
          "duration": 60,
          "difficulty": "intermediate",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_10",
      "title": "Chapter 10: Program Files and Preprocessing Directives",
      "description": "Explains translation units, header organisation, macros, conditional compilation, and effective namespace usage.",
      "lessons": [
        {
          "id": "chapter_10_program_structure",
          "title": "Chapter 10: Program Files and Preprocessing Directives",
          "duration": 50,
          "difficulty": "intermediate",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_11",
      "title": "Chapter 11: Defining Your Own Data Types",
      "description": "Builds full classes with data members, member functions, encapsulation, and the object model required for larger programs.",
      "lessons": [
        {
          "id": "chapter_11_defining_classes",
          "title": "Chapter 11: Defining Your Own Data Types",
          "duration": 60,
          "difficulty": "intermediate",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_12",
      "title": "Chapter 12: Operator Overloading",
      "description": "Shows when and how to overload operators to express domain logic clearly while respecting C++ best practices.",
      "lessons": [
        {
          "id": "chapter_12_operator_overloading",
          "title": "Chapter 12: Operator Overloading",
          "duration": 55,
          "difficulty": "advanced",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_13",
      "title": "Chapter 13: Inheritance",
      "description": "Explains deriving classes, reusing base functionality, and structuring hierarchies with protected members and base constructors.",
      "lessons": [
        {
          "id": "chapter_13_inheritance",
          "title": "Chapter 13: Inheritance",
          "duration": 60,
          "difficulty": "advanced",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_14",
      "title": "Chapter 14: Polymorphism",
      "description": "Covers virtual functions, overriding, abstract interfaces, and the vtable mechanics behind dynamic dispatch.",
      "lessons": [
        {
          "id": "chapter_14_polymorphism",
          "title": "Chapter 14: Polymorphism",
          "duration": 60,
          "difficulty": "advanced",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_15",
      "title": "Chapter 15: Runtime Errors and Exceptions",
      "description": "Teaches structured error handling, exception safety levels, and resource management with RAII.",
      "lessons": [
        {
          "id": "chapter_15_exceptions",
          "title": "Chapter 15: Runtime Errors and Exceptions",
          "duration": 45,
          "difficulty": "intermediate",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_16",
      "title": "Chapter 16: Class Templates",
      "description": "Extends templates to user-defined types, illustrating generic containers, specialisation, and compilation implications.",
      "lessons": [
        {
          "id": "chapter_16_class_templates",
          "title": "Chapter 16: Class Templates",
          "duration": 60,
          "difficulty": "advanced",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_17",
      "title": "Chapter 17: Move Semantics",
      "description": "Introduces rvalue references, move constructors, move assignment, and perfect forwarding for performance-critical code.",
      "lessons": [
        {
          "id": "chapter_17_move_semantics",
          "title": "Chapter 17: Move Semantics",
          "duration": 50,
          "difficulty": "advanced",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_18",
      "title": "Chapter 18: First-Class Functions",
      "description": "Presents function objects, lambda expressions, captures, and the <functional> utilities that make them reusable.",
      "lessons": [
        {
          "id": "chapter_18_first_class_functions",
          "title": "Chapter 18: First-Class Functions",
          "duration": 45,
          "difficulty": "advanced",
          "exerciseAvailable": false
        }
      ]
    },
    {
      "id": "chapter_19",
      "title": "Chapter 19: Containers and Algorithms",
      "description": "Demonstrates the STL containers, iterators, algorithm library, and how to compose modern, expressive data pipelines.",
      "lessons": [
        {
          "id": "chapter_19_containers_algorithms",
          "title": "Chapter 19: Containers and Algorithms",
          "duration": 60,
          "difficulty": "advanced",
          "exerciseAvailable": false
        }
      ]
    }
  ]
}