{
  "id": "hello_world_exercise",
  "title": "Exercise 1.1: Dual Hello World",
  "description": "Create greeting programs in both C and C++ that welcome learners to the TSI coding journey.",
  "difficulty": "beginner",
  "tags": ["basics", "output", "stdio", "iostream"],
  "starterCode": "#include <iostream>\n\nint main() {\n    // TODO: print these exact lines using std::cout:\n    //   Hello, TSI!\n    //   Welcome to modern C++.\n    // Use std::endl (or \\n) after each message and keep the capitalization identical.\n    return 0;\n}\n",
  "tests": [
    {
      "name": "cpp_full_output",
      "description": "Program should print both greeting lines for the C++ variant",
      "expected": "Hello, TSI!\nWelcome to modern C++.",
      "type": "output"
    },
    {
      "name": "cpp_mentions_tsi",
      "description": "Output should reference the TSI greeting",
      "expected": "TSI",
      "type": "output_contains"
    }
  ],
  "hints": [
    "Include <iostream> and use std::cout for printing",
    "Each line of output should end with std::endl to add a newline",
    "Match the capitalization exactly: Hello, TSI!",
    "Remember to return 0 from main()"
  ],
  "variants": [
    {
      "id": "hello_world_c",
      "title": "Exercise 1.1A: Hello World in C",
      "language": "c",
      "difficulty": "beginner",
  "starterCode": "#include <stdio.h>\n\nint main(void) {\n    // TODO: print these exact lines using printf:\n    //   Hello, TSI!\n    //   Welcome to C programming.\n    // Include a newline after each string so the output matches the tests exactly.\n    return 0;\n}\n",
      "tests": [
        {
          "name": "c_full_output",
          "description": "Program should print both greeting lines for the C variant",
          "expected": "Hello, TSI!\nWelcome to C programming.",
          "type": "output"
        },
        {
          "name": "c_mentions_language",
          "description": "Output should mention C programming on the second line",
          "expected": "C programming.",
          "type": "output_contains"
        }
      ],
      "hints": [
        "Use printf for output in C",
        "Remember to include <stdio.h>",
        "Add \\n to move to the next line",
        "Return 0 from main()"
      ]
    },
    {
      "id": "hello_world_cpp",
      "title": "Exercise 1.1B: Hello World in C++",
      "language": "cpp",
      "difficulty": "beginner",
  "starterCode": "#include <iostream>\n\nint main() {\n    // TODO: print exactly:\n    //   Hello, TSI!\n    //   Welcome to modern C++.\n    // Use std::endl after each statement so each message appears on its own line.\n    return 0;\n}\n",
      "tests": [
        {
          "name": "cpp_full_output",
          "description": "Program should print both greeting lines for the C++ variant",
          "expected": "Hello, TSI!\nWelcome to modern C++.",
          "type": "output"
        },
        {
          "name": "cpp_mentions_modern",
          "description": "Output should include the phrase 'modern C++'",
          "expected": "modern C++",
          "type": "output_contains"
        }
      ],
      "hints": [
        "Use std::cout << value << std::endl; for each line",
        "No need for using namespace std; when you use the std:: prefix",
        "Ensure the second line says exactly: Welcome to modern C++.",
        "Return 0 at the end of main()"
      ]
    }
  ]
}