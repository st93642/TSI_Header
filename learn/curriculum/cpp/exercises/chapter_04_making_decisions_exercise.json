{
  "id": "chapter_04_making_decisions_exercise",
  "title": "Exercise 4: Decision Desk",
  "description": "Build a kiosk that classifies visitor roles using nested conditionals and switch statements.",
  "difficulty": "beginner",
  "tags": ["conditionals", "switch", "control flow", "input"],
  "starterCode": "#include <iostream>\n#include <string>\n\nint main() {\n    // Offline tutorial standard:\n    // Read two values from stdin in this order: role (string), age (int).\n    // role will be one of: student, researcher, guest.\n    // Implement an if-initialiser to validate the age (negative ages trigger an error message).\n    // Use a switch statement on the first character of the role to route to messages.\n    // Expected output format:\n    //   Role: student\n    //   Age: 19\n    //   Access: General Lab\n    //   Action: Issue day badge\n    // Age < 0 should produce:\n    //   Role: student\n    //   Age: -2\n    //   Error: invalid age\n    std::string role;\n    std::getline(std::cin >> std::ws, role);\n\n    int age{};\n    std::cin >> age;\n\n    // TODO: implement the decision logic here.\n\n    return 0;\n}\n",
  "tests": [
    {
      "name": "student_case",
      "description": "Student under 25",
      "input": "student\n19\n",
      "expected": "Role: student\nAge: 19\nAccess: General Lab\nAction: Issue day badge",
      "type": "output"
    },
    {
      "name": "researcher_case",
      "description": "Researcher over 25",
      "input": "researcher\n40\n",
      "expected": "Role: researcher\nAge: 40\nAccess: Advanced Lab\nAction: Escort to clean room",
      "type": "output"
    },
    {
      "name": "guest_case",
      "description": "Guest any age",
      "input": "guest\n33\n",
      "expected": "Role: guest\nAge: 33\nAccess: Lobby Only\nAction: Notify host",
      "type": "output"
    },
    {
      "name": "invalid_age",
      "description": "Negative age triggers validation",
      "input": "student\n-4\n",
      "expected": "Role: student\nAge: -4\nError: invalid age",
      "type": "output"
    }
  ],
  "hints": [
    "Use an if initialiser (if (int age = ...; age < 0)) to validate input before the switch.",
    "Switch on role.front() after converting to lowercase.",
    "Remember to print the Role and Age lines even when an error occurs.",
    "Break out of switch cases to avoid unintended fallthroughs." 
  ]
}
