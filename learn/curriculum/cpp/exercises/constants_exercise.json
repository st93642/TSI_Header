{
  "id": "constants_exercise",
  "title": "Exercise 1.4: Constants and the Preprocessor",
  "description": "Define constants using both modern C++ features and classic C preprocessor directives, then display their values.",
  "difficulty": "beginner",
  "tags": ["constants", "preprocessor", "macros"],
  "starterCode": "#include <iostream>\n#include <string>\n#include <iomanip>\n\nint main() {\n    // TODO: declare the following constants using constexpr/const:\n    //   Campus: \"TSI Riga\" (std::string or std::string_view)\n    //   Max Seats: 32 (int)\n    //   Pi Value: 3.1416 (double)\n    // TODO: print each line exactly as shown with std::cout and std::endl:\n    //   Campus: TSI Riga\n    //   Max Seats: 32\n    //   Pi Value: 3.1416\n    // Remember to use std::fixed << std::setprecision(4) before printing Pi.\n    return 0;\n}\n",
  "tests": [
    {
      "name": "cpp_outputs_constants",
      "description": "Program should print all constant values for the C++ variant",
      "expected": "Campus: TSI Riga\nMax Seats: 32\nPi Value: 3.1416",
      "type": "output"
    },
    {
      "name": "cpp_mentions_pi",
      "description": "Output should include the Pi constant",
      "expected": "Pi Value: 3.1416",
      "type": "output_contains"
    }
  ],
  "hints": [
    "Use constexpr or const in C++ for compile-time constants",
    "Remember that std::cout prints strings exactly as written",
    "Match the labels and spacing shown in the expected output",
    "Format Pi with four decimal places (hint: include <iomanip> and use std::fixed << std::setprecision(4))"
  ],
  "variants": [
    {
      "id": "constants_c",
      "title": "Exercise 1.4A: Constants in C",
      "language": "c",
      "difficulty": "beginner",
      "starterCode": "#include <stdio.h>\n\n#define CAMPUS \"TSI Riga\"\n#define PI 3.1416\n\nint main(void) {\n    // TODO: declare const int MAX_SEATS with a value of 32\n    // TODO: print the constants exactly in this order and format using printf:\n    //   Campus: TSI Riga\n    //   Max Seats: 32\n    //   Pi Value: 3.1416\n    // Hint: use %s for CAMPUS, %d for MAX_SEATS, and %.4f for PI to match the expected output.\n    return 0;\n}\n",
      "tests": [
        {
          "name": "c_outputs_constants",
          "description": "Program should print all constant values for the C variant",
          "expected": "Campus: TSI Riga\nMax Seats: 32\nPi Value: 3.1416",
          "type": "output"
        },
        {
          "name": "c_mentions_macro",
          "description": "Output should include the campus macro value",
          "expected": "Campus: TSI Riga",
          "type": "output_contains"
        }
      ],
      "hints": [
        "Use #define for compile-time macros such as CAMPUS and PI",
        "Declare MAX_SEATS as a const int so it has a type",
        "Print strings with %s, integers with %d, and Pi with %.4f",
        "Call printf with a newline (\\n) after each line"
      ]
    },
    {
      "id": "constants_cpp",
      "title": "Exercise 1.4B: Constants in Modern C++",
      "language": "cpp",
      "difficulty": "beginner",
      "starterCode": "#include <iostream>\n#include <string>\n#include <string_view>\n#include <iomanip>\n\nint main() {\n    // TODO: declare constexpr/const values with these exact contents:\n    //   campus (std::string_view): \"TSI Riga\"\n    //   maxSeats (int): 32\n    //   pi (double): 3.1416\n    // TODO: print the summary exactly as below using std::cout and std::endl:\n    //   Campus: TSI Riga\n    //   Max Seats: 32\n    //   Pi Value: 3.1416\n    // Apply std::fixed and std::setprecision(4) before printing pi.\n    return 0;\n}\n",
      "tests": [
        {
          "name": "cpp_outputs_constants",
          "description": "Program should print all constant values for the C++ variant",
          "expected": "Campus: TSI Riga\nMax Seats: 32\nPi Value: 3.1416",
          "type": "output"
        },
        {
          "name": "cpp_mentions_campus",
          "description": "Output should include the campus name constant",
          "expected": "Campus: TSI Riga",
          "type": "output_contains"
        }
      ],
      "hints": [
        "Use constexpr std::string_view or const std::string for text constants",
        "Prefer constexpr for numeric compile-time constants",
        "Print each constant using std::cout << value << std::endl;",
        "Ensure Pi prints with four decimal places using std::fixed and std::setprecision(4)"
      ]
    }
  ]
}
