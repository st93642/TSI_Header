<svg width="900" height="600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: 'Segoe UI', sans-serif; font-size: 24px; font-weight: bold; fill: #666; }
      .label { font-family: 'Segoe UI', sans-serif; font-size: 16px; font-weight: bold; fill: #666; }
      .text { font-family: 'Segoe UI', sans-serif; font-size: 14px; fill: #666; }
      .node { fill: #fff; stroke: #666; stroke-width: 2; }
      .recompute { fill: #ffe6e6; stroke: #ff6666; stroke-width: 2; }
      .cached { fill: #e6f3ff; stroke: #0066cc; stroke-width: 2; }
      .arrow { fill: #666; }
      .call-line { stroke: #666; stroke-width: 1; }
      .recompute-arrow { stroke: #ff6666; stroke-width: 2; }
    </style>
  </defs>

  <!-- Title -->
  <text x="450" y="30" text-anchor="middle" class="title">Overlapping Subproblems</text>

  <!-- Fibonacci Call Tree (Naive) -->
  <text x="150" y="70" text-anchor="middle" class="label">Naive Recursive Calls (Exponential)</text>

  <!-- F(5) -->
  <circle cx="150" cy="100" r="20" class="node"/>
  <text x="150" y="105" text-anchor="middle" class="text">F(5)</text>

  <!-- F(4) and F(3) -->
  <circle cx="100" cy="150" r="18" class="node"/>
  <text x="100" y="155" text-anchor="middle" class="text">F(4)</text>
  <circle cx="200" cy="150" r="18" class="node"/>
  <text x="200" y="155" text-anchor="middle" class="text">F(3)</text>

  <!-- F(3), F(2), F(2), F(1) -->
  <circle cx="70" cy="200" r="16" class="recompute"/>
  <text x="70" y="205" text-anchor="middle" class="text">F(3)</text>
  <circle cx="130" cy="200" r="16" class="node"/>
  <text x="130" y="205" text-anchor="middle" class="text">F(2)</text>
  <circle cx="170" cy="200" r="16" class="recompute"/>
  <text x="170" y="205" text-anchor="middle" class="text">F(2)</text>
  <circle cx="230" cy="200" r="16" class="node"/>
  <text x="230" y="205" text-anchor="middle" class="text">F(1)</text>

  <!-- Lower level calls -->
  <circle cx="50" cy="250" r="14" class="recompute"/>
  <text x="50" y="255" text-anchor="middle" class="text">F(2)</text>
  <circle cx="90" cy="250" r="14" class="node"/>
  <text x="90" y="255" text-anchor="middle" class="text">F(1)</text>
  <circle cx="110" cy="250" r="14" class="recompute"/>
  <text x="110" y="255" text-anchor="middle" class="text">F(2)</text>
  <circle cx="150" cy="250" r="14" class="node"/>
  <text x="150" y="255" text-anchor="middle" class="text">F(1)</text>
  <circle cx="190" cy="250" r="14" class="recompute"/>
  <text x="190" y="255" text-anchor="middle" class="text">F(1)</text>
  <circle cx="210" cy="250" r="14" class="recompute"/>
  <text x="210" y="255" text-anchor="middle" class="text">F(1)</text>

  <!-- Arrows for naive calls -->
  <line x1="150" y1="120" x2="100" y2="132" class="call-line"/>
  <line x1="150" y1="120" x2="200" y2="132" class="call-line"/>
  <line x1="100" y1="168" x2="70" y2="184" class="call-line"/>
  <line x1="100" y1="168" x2="130" y2="184" class="call-line"/>
  <line x1="200" y1="168" x2="170" y2="184" class="call-line"/>
  <line x1="200" y1="168" x2="230" y2="184" class="call-line"/>

  <!-- Memoized Version -->
  <text x="650" y="70" text-anchor="middle" class="label">Memoized Calls (Linear)</text>

  <!-- F(5) -->
  <circle cx="650" cy="100" r="20" class="node"/>
  <text x="650" y="105" text-anchor="middle" class="text">F(5)</text>

  <!-- F(4) and F(3) -->
  <circle cx="600" cy="150" r="18" class="node"/>
  <text x="600" y="155" text-anchor="middle" class="text">F(4)</text>
  <circle cx="700" cy="150" r="18" class="cached"/>
  <text x="700" y="155" text-anchor="middle" class="text">F(3)</text>

  <!-- F(3) and F(2) from F(4) -->
  <circle cx="570" cy="200" r="16" class="cached"/>
  <text x="570" y="205" text-anchor="middle" class="text">F(3)</text>
  <circle cx="630" cy="200" r="16" class="node"/>
  <text x="630" y="205" text-anchor="middle" class="text">F(2)</text>

  <!-- F(2) and F(1) from F(3) -->
  <circle cx="540" cy="250" r="14" class="cached"/>
  <text x="540" y="255" text-anchor="middle" class="text">F(2)</text>
  <circle cx="600" cy="250" r="14" class="node"/>
  <text x="600" y="255" text-anchor="middle" class="text">F(1)</text>

  <!-- F(1) and F(0) from F(2) -->
  <circle cx="510" cy="300" r="12" class="cached"/>
  <text x="510" y="305" text-anchor="middle" class="text">F(1)</text>
  <circle cx="570" cy="300" r="12" class="node"/>
  <text x="570" y="305" text-anchor="middle" class="text">F(0)</text>

  <!-- Arrows for memoized calls -->
  <line x1="650" y1="120" x2="600" y2="132" class="call-line"/>
  <line x1="650" y1="120" x2="700" y2="132" class="call-line"/>
  <line x1="600" y1="168" x2="570" y2="184" class="call-line"/>
  <line x1="600" y1="168" x2="630" y2="184" class="call-line"/>
  <line x1="570" y1="216" x2="540" y2="236" class="call-line"/>
  <line x1="570" y1="216" x2="600" y2="236" class="call-line"/>
  <line x1="540" y1="264" x2="510" y2="284" class="call-line"/>
  <line x1="540" y1="264" x2="570" y2="284" class="call-line"/>

  <!-- Cache hits indicators -->
  <text x="720" y="170" class="text">Cache Hit!</text>
  <polygon points="715,175 725,175 720,180" class="arrow"/>
  <line x1="700" y1="168" x2="710" y2="168" stroke="#0066cc" stroke-width="2"/>

  <text x="590" y="220" class="text">Cache Hit!</text>
  <polygon points="585,225 595,225 590,230" class="arrow"/>
  <line x1="570" y1="216" x2="580" y2="216" stroke="#0066cc" stroke-width="2"/>

  <!-- Legend -->
  <text x="400" y="350" text-anchor="middle" class="label">Legend</text>

  <circle cx="300" cy="380" r="12" class="node"/>
  <text x="320" cy="385" class="text">First computation</text>

  <circle cx="300" cy="410" r="12" class="cached"/>
  <text x="320" cy="415" class="text">Cache hit (reused)</text>

  <circle cx="300" cy="440" r="12" class="recompute"/>
  <text x="320" cy="445" class="text">Redundant computation</text>

  <!-- Performance Comparison -->
  <rect x="50" y="480" width="350" height="100" fill="#f8f8f8" stroke="#666" stroke-width="1" rx="5"/>
  <text x="225" y="500" text-anchor="middle" class="label">Naive Approach</text>
  <text x="225" y="520" text-anchor="middle" class="text">Time: O(2^n) - Exponential</text>
  <text x="225" y="535" text-anchor="middle" class="text">Calls: F(n) called once, but</text>
  <text x="225" y="550" text-anchor="middle" class="text">F(2) computed 3 times, F(1) computed 5 times</text>
  <text x="225" y="565" text-anchor="middle" class="text">Space: O(n) - Recursion stack</text>

  <rect x="500" y="480" width="350" height="100" fill="#f8f8f8" stroke="#666" stroke-width="1" rx="5"/>
  <text x="675" y="500" text-anchor="middle" class="label">Memoized Approach</text>
  <text x="675" y="520" text-anchor="middle" class="text">Time: O(n) - Linear</text>
  <text x="675" y="535" text-anchor="middle" class="text">Calls: Each F(k) computed exactly once</text>
  <text x="675" y="550" text-anchor="middle" class="text">Space: O(n) - Cache + recursion stack</text>
  <text x="675" y="565" text-anchor="middle" class="text">Efficiency: 99%+ reduction in redundant work</text>
</svg>