/*****************************************************************************/
/*                                                                           */
/*  test_class_dart.txt                                  TTTTTTTT SSSSSSS II */
/*                                                          TT    SS      II */
/*  By: st93642@students.tsi.lv                             TT    SSSSSSS II */
/*                                                          TT         SS II */
/*  Created: Sep 29 2025 00:16 st93642                      TT    SSSSSSS II */
/*  Updated: Sep 29 2025 00:16 st93642                                       */
/*                                                                           */
/*   Transport and Telecommunication Institute - Riga, Latvia                */
/*                       https://tsi.lv                                      */
/*****************************************************************************/

/**
 * TestClass class with basic functionality
 */
class TestClass {
  // Properties
  String name;
  int id;
  
  // Constructor with optional parameters
  TestClass({this.name = "", this.id = 0});
  
  // Named constructor
  TestClass.withName(String name) : this(name: name, id: 0);
  
  // Factory constructor
  factory TestClass.createDefault() {
    return TestClass(name: "Default", id: 0);
  }
  
  // Getters (automatic in Dart, but explicit for clarity)
  String get getName => name;
  int get getId => id;
  
  // Setters
  set setName(String value) => name = value;
  set setId(int value) => id = value;
  
  // Override toString method
  @override
  String toString() {
    return "TestClass{name=\"$name\", id=$id}";
  }
  
  // Override == operator
  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other is! TestClass) return false;
    return name == other.name && id == other.id;
  }
  
  // Override hashCode
  @override
  int get hashCode => name.hashCode ^ id.hashCode;
  
  // Display method
  void display() {
    print(toString());
  }
  
  // Clone method
  TestClass clone() {
    return TestClass(name: name, id: id);
  }
  
  // Additional utility methods
  bool isEmpty() {
    return name.isEmpty && id == 0;
  }
  
  void reset() {
    name = "";
    id = 0;
  }
}

# Example usage
// void main() {
//   var obj = TestClass(name: "Example", id: 123);
//   obj.display();
//   
//   // Test named constructor
//   var namedObj = TestClass.withName("Test");
//   namedObj.display();
//   
//   // Test factory constructor
//   var defaultObj = TestClass.createDefault();
//   defaultObj.display();
// }