/*****************************************************************************/
/*                                                                           */
/*  test_class_javascript.txt                            TTTTTTTT SSSSSSS II */
/*                                                          TT    SS      II */
/*  By: st93642@students.tsi.lv                             TT    SSSSSSS II */
/*                                                          TT         SS II */
/*  Created: Sep 29 2025 10:49 st93642                      TT    SSSSSSS II */
/*  Updated: Sep 29 2025 10:49 st93642                                       */
/*                                                                           */
/*   Transport and Telecommunication Institute - Riga, Latvia                */
/*                       https://tsi.lv                                      */
/*****************************************************************************/

/**
 * TestClass class with basic functionality
 */
class TestClass {
    /**
     * Create a TestClass instance
     * @param {string} name - The name attribute
     * @param {number} id - The ID attribute
     */
    constructor(name = "", id = 0) {
        this._name = name;
        this._id = id;
    }

    /**
     * Get the name attribute
     * @returns {string} The name
     */
    get name() {
        return this._name;
    }

    /**
     * Set the name attribute
     * @param {string} value - The new name
     */
    set name(value) {
        if (typeof value !== 'string') {
            throw new TypeError('Name must be a string');
        }
        this._name = value;
    }

    /**
     * Get the ID attribute
     * @returns {number} The ID
     */
    get id() {
        return this._id;
    }

    /**
     * Set the ID attribute
     * @param {number} value - The new ID
     */
    set id(value) {
        if (typeof value !== 'number') {
            throw new TypeError('ID must be a number');
        }
        this._id = value;
    }

    /**
     * String representation of the object
     * @returns {string} String representation
     */
    toString() {
        return `TestClass{name='${this._name}', id=${this._id}}`;
    }

    /**
     * Check equality with another object
     * @param {*} other - Object to compare with
     * @returns {boolean} True if equal
     */
    equals(other) {
        if (!(other instanceof TestClass)) {
            return false;
        }
        return this._name === other._name && this._id === other._id;
    }

    /**
     * Display the object information
     */
    display() {
        console.log(this.toString());
    }
}

# Example usage
// const obj = new TestClass("Example", 123);
// obj.display();

// Export for use as module
module.exports = { TestClass };