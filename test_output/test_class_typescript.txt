/*****************************************************************************/
/*                                                                           */
/*  test_class_typescript.txt                            TTTTTTTT SSSSSSS II */
/*                                                          TT    SS      II */
/*  By: st93642@students.tsi.lv                             TT    SSSSSSS II */
/*                                                          TT         SS II */
/*  Created: Sep 29 2025 02:49 st93642                      TT    SSSSSSS II */
/*  Updated: Sep 29 2025 02:49 st93642                                       */
/*                                                                           */
/*   Transport and Telecommunication Institute - Riga, Latvia                */
/*                       https://tsi.lv                                      */
/*****************************************************************************/

/**
 * TestClass class with basic functionality
 */
class TestClass {
    /**
     * Create a TestClass instance
     * @param name - The name attribute
     * @param id - The ID attribute
     */
    constructor(private _name: string = "", private _id: number = 0) {}

    /**
     * Get the name attribute
     * @returns The name
     */
    get name(): string {
        return this._name;
    }

    /**
     * Set the name attribute
     * @param value - The new name
     */
    set name(value: string) {
        if (typeof value !== 'string') {
            throw new TypeError('Name must be a string');
        }
        this._name = value;
    }

    /**
     * Get the ID attribute
     * @returns The ID
     */
    get id(): number {
        return this._id;
    }

    /**
     * Set the ID attribute
     * @param value - The new ID
     */
    set id(value: number) {
        if (typeof value !== 'number') {
            throw new TypeError('ID must be a number');
        }
        this._id = value;
    }

    /**
     * String representation of the object
     * @returns String representation
     */
    toString(): string {
        return `TestClass{name='${this._name}', id=${this._id}}`;
    }

    /**
     * Check equality with another object
     * @param other - Object to compare with
     * @returns True if equal
     */
    equals(other: any): boolean {
        if (!(other instanceof TestClass)) {
            return false;
        }
        return this._name === other._name && this._id === other._id;
    }

    /**
     * Display the object information
     */
    display(): void {
        console.log(this.toString());
    }
}

# Example usage
// const obj = new TestClass("Example", 123);
// obj.display();

// Export for use as module
export { TestClass };