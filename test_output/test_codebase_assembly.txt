;; ************************************************************************* ;;
;;                                                                           ;;
;;  test_codebase_assembly.txt                           TTTTTTTT SSSSSSS II ;;
;;                                                          TT    SS      II ;;
;;  By: st93642@students.tsi.lv                             TT    SSSSSSS II ;;
;;                                                          TT         SS II ;;
;;  Created: Sep 29 2025 10:49 st93642                      TT    SSSSSSS II ;;
;;  Updated: Sep 29 2025 10:49 st93642                                       ;;
;;                                                                           ;;
;;   Transport and Telecommunication Institute - Riga, Latvia                ;;
;;                       https://tsi.lv                                      ;;
;; ************************************************************************* ;;

; Basic Assembly program (x86-64 Linux)
; Note: This is a basic assembly program template

section .data
    hello db 'Hello, World!', 0xA  ; String with newline
    hello_len equ $ - hello         ; Length of string
    
    message db 'This is a basic Assembly program.', 0xA
    message_len equ $ - message

section .text
    global _start

_start:
    ; Write "Hello, World!" to stdout
    mov rax, 1          ; syscall: write
    mov rdi, 1          ; file descriptor: stdout
    mov rsi, hello      ; pointer to string
    mov rdx, hello_len  ; length of string
    syscall
    
    ; Write message to stdout
    mov rax, 1          ; syscall: write
    mov rdi, 1          ; file descriptor: stdout
    mov rsi, message    ; pointer to message
    mov rdx, message_len ; length of message
    syscall
    
    ; Exit program
    mov rax, 60         ; syscall: exit
    xor rdi, rdi        ; exit code 0
    syscall

; Example function (uncomment to use)
; greet:
;     ; Function to print greeting
;     ; Parameters would be passed in registers
;     ret
