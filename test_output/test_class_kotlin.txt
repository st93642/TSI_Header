/*****************************************************************************/
/*                                                                           */
/*  test_class_kotlin.txt                                TTTTTTTT SSSSSSS II */
/*                                                          TT    SS      II */
/*  By: st93642@students.tsi.lv                             TT    SSSSSSS II */
/*                                                          TT         SS II */
/*  Created: Sep 30 2025 17:57 st93642                      TT    SSSSSSS II */
/*  Updated: Sep 30 2025 17:57 st93642                                       */
/*                                                                           */
/*   Transport and Telecommunication Institute - Riga, Latvia                */
/*                       https://tsi.lv                                      */
/*****************************************************************************/

/**
 * TestClass class with basic functionality
 */
class TestClass(
    var name: String = "",
    var id: Int = 0
) {
    /**
     * Secondary constructor
     */
    constructor(name: String) : this(name, 0)

    /**
     * Copy constructor equivalent
     */
    constructor(other: TestClass) : this(other.name, other.id)

    /**
     * Override toString method
     */
    override fun toString(): String {
        return "TestClass(name='$name', id=$id)"
    }

    /**
     * Override equals method
     */
    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (other !is TestClass) return false
        return name == other.name && id == other.id
    }

    /**
     * Override hashCode method
     */
    override fun hashCode(): Int {
        return name.hashCode() * 31 + id
    }

    /**
     * Display method
     */
    fun display() {
        println(toString())
    }

    /**
     * Companion object for static methods
     */
    companion object {
        /**
         * Create instance with default values
         */
        fun create(): TestClass {
            return TestClass("Default", 0)
        }
    }
}

# Example usage
// val obj = TestClass("Example", 123)
// obj.display()

// Test companion object
// val defaultObj = TestClass.create()