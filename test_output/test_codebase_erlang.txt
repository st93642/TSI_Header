%% ************************************************************************* %%
%%                                                                           %%
%%  test_codebase_erlang.txt                             TTTTTTTT SSSSSSS II %%
%%                                                          TT    SS      II %%
%%  By: st93642@students.tsi.lv                             TT    SSSSSSS II %%
%%                                                          TT         SS II %%
%%  Created: Sep 29 2025 13:53 st93642                      TT    SSSSSSS II %%
%%  Updated: Sep 29 2025 13:53 st93642                                       %%
%%                                                                           %%
%%   Transport and Telecommunication Institute - Riga, Latvia                %%
%%                       https://tsi.lv                                      %%
%% ************************************************************************* %%
%% Basic Erlang program

-module(tsi_application).
-export([main/0, run/0, greet/1, get_info/0]).

%% Main function - entry point
main() ->
    io:format("Hello, World!~n"),
    io:format("This is a basic Erlang program.~n"),
    run().

%% Run application logic
run() ->
    Version = "1.0",
    io:format("Version: ~s~n", [Version]),

    %% Example with lists
    Languages = ["Erlang", "Elixir", "Scala"],
    io:format("Languages:~n"),
    lists:foreach(fun(Lang) ->
        io:format("  ~s~n", [Lang])
    end, Languages),

    %% Example with tuples and records
    Config = {config, true, 8080, ["logging", "caching"]},
    io:format("Configuration:~n"),
    io:format("  Debug: ~p~n", [element(2, Config)]),
    io:format("  Port: ~p~n", [element(3, Config)]).

%% Greet function
greet(Name) ->
    lists:flatten(io_lib:format("Hello, ~s!", [Name])).

%% Get application info
get_info() ->
    [{name, "TSI Application"}, {version, "1.0"}].

%% Example usage (uncomment to test)
%% greet("TSI Student").
%% get_info().