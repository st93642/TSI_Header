/*****************************************************************************/
/*                                                                           */
/*  test_codebase_solidity.txt                           TTTTTTTT SSSSSSS II */
/*                                                          TT    SS      II */
/*  By: st93642@students.tsi.lv                             TT    SSSSSSS II */
/*                                                          TT         SS II */
/*  Created: Sep 29 2025 14:28 st93642                      TT    SSSSSSS II */
/*  Updated: Sep 29 2025 14:28 st93642                                       */
/*                                                                           */
/*   Transport and Telecommunication Institute - Riga, Latvia                */
/*                       https://tsi.lv                                      */
/*****************************************************************************/

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

/**
 * @title HelloWorld
 * @dev Basic Solidity contract
 */
contract HelloWorld {
    // State variables
    string public message;
    address public owner;
    uint256 public createdAt;
    
    // Events
    event MessageChanged(string newMessage, address changedBy);
    
    // Constructor
    constructor() {
        message = "Hello, World!";
        owner = msg.sender;
        createdAt = block.timestamp;
    }
    
    // Main function - view the message
    function getMessage() public view returns (string memory) {
        return message;
    }
    
    // Function to change the message (only owner)
    function setMessage(string memory _newMessage) public {
        require(msg.sender == owner, "Only owner can change message");
        message = _newMessage;
        emit MessageChanged(_newMessage, msg.sender);
    }
    
    // Function to get contract info
    function getInfo() public view returns (string memory, address, uint256) {
        return (message, owner, createdAt);
    }
    
    // Fallback function
    receive() external payable {
        // Handle plain Ether transfers
    }
}
